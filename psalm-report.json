{
    "error": [],
    "warning": [
        {
            "severity": "info",
            "line_from": 75,
            "line_to": 75,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Orm\\Zed\\Currency\\Persistence\\SpyCurrencyQuery::filterbyfkmerchantrelationship does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductMerchantRelationshipDataImport/src/Spryker/Zed/PriceProductMerchantRelationshipDataImport/Business/Model/PriceProductMerchantRelationshipWriterStep.php",
            "snippet": "            ->filterByFkMerchantRelationship($dataSet[PriceProductMerchantRelationshipDataSetInterface::ID_MERCHANT_RELATIONSHIP]);",
            "selected_text": "filterByFkMerchantRelationship",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 37,
            "line_to": 37,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Propel\\Runtime\\ActiveQuery\\ModelCriteria::findonebycode does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductMerchantRelationshipDataImport/src/Spryker/Zed/PriceProductMerchantRelationshipDataImport/Business/Model/Step/CurrencyToIdCurrencyStep.php",
            "snippet": "                ->findOneByCode($currencyCode);",
            "selected_text": "findOneByCode",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 37,
            "line_to": 37,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Propel\\Runtime\\ActiveQuery\\ModelCriteria::findonebymerchantrelationshipkey does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductMerchantRelationshipDataImport/src/Spryker/Zed/PriceProductMerchantRelationshipDataImport/Business/Model/Step/MerchantRelationshipKeyToIdMerchantRelationshipStep.php",
            "snippet": "                ->findOneByMerchantRelationshipKey($merchantRelationshipKey);",
            "selected_text": "findOneByMerchantRelationshipKey",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 37,
            "line_to": 37,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Propel\\Runtime\\ActiveQuery\\ModelCriteria::findonebyname does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductMerchantRelationshipDataImport/src/Spryker/Zed/PriceProductMerchantRelationshipDataImport/Business/Model/Step/StoreToIdStoreStep.php",
            "snippet": "                ->findOneByName($storeName);",
            "selected_text": "findOneByName",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 36,
            "line_to": 36,
            "type": "PossiblyUndefinedMethod",
            "message": "Method Spryker\\Zed\\DataImport\\Business\\Model\\DataSet\\DataSetStepBrokerInterface::addStep does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductMerchantRelationshipDataImport/src/Spryker/Zed/PriceProductMerchantRelationshipDataImport/Business/PriceProductMerchantRelationshipDataImportBusinessFactory.php",
            "snippet": "            ->addStep($this->createMerchantRelationshipKeyToIdBusinessUnitStep())",
            "selected_text": "addStep",
            "error_level": 3,
            "shortcode": 108
        },
        {
            "severity": "info",
            "line_from": 44,
            "line_to": 44,
            "type": "PossiblyUndefinedMethod",
            "message": "Method Spryker\\Zed\\DataImport\\Business\\Model\\DataImporterInterface::addDataSetStepBroker does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductMerchantRelationshipDataImport/src/Spryker/Zed/PriceProductMerchantRelationshipDataImport/Business/PriceProductMerchantRelationshipDataImportBusinessFactory.php",
            "snippet": "        $dataImporter->addDataSetStepBroker($dataSetStepBroker);",
            "selected_text": "addDataSetStepBroker",
            "error_level": 3,
            "shortcode": 108
        },
        {
            "severity": "info",
            "line_from": 44,
            "line_to": 44,
            "type": "PossiblyInvalidArgument",
            "message": "Argument 1 of Spryker\\Zed\\DataImport\\Business\\Model\\DataSet\\DataSetStepBrokerAwareInterface::addDataSetStepBroker expects Spryker\\Zed\\DataImport\\Business\\Model\\DataSet\\DataSetStepBrokerInterface, possibly different type Spryker\\Zed\\DataImport\\Business\\Model\\DataImportStep\\DataImportStepAwareInterface|Spryker\\Zed\\DataImport\\Business\\Model\\DataSet\\DataSetStepBrokerInterface provided",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductMerchantRelationshipDataImport/src/Spryker/Zed/PriceProductMerchantRelationshipDataImport/Business/PriceProductMerchantRelationshipDataImportBusinessFactory.php",
            "snippet": "        $dataImporter->addDataSetStepBroker($dataSetStepBroker);",
            "selected_text": "$dataSetStepBroker",
            "error_level": 3,
            "shortcode": 92
        },
        {
            "severity": "info",
            "line_from": 30,
            "line_to": 30,
            "type": "PossiblyUndefinedMethod",
            "message": "Method Spryker\\Zed\\DataImport\\Business\\Model\\DataImporterAfterImportAwareInterface::import does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/PriceProductMerchantRelationshipDataImport/src/Spryker/Zed/PriceProductMerchantRelationshipDataImport/Business/PriceProductMerchantRelationshipDataImportFacade.php",
            "snippet": "        return $this->getFactory()->createPriceProductMerchantRelationshipDataImport()->import($dataImporterConfigurationTransfer);",
            "selected_text": "import",
            "error_level": 3,
            "shortcode": 108
        }
    ],
    "deprecation": []
}